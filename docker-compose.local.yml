services:
  db:
    image: postgres
    volumes:
      - dbdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    hostname: chef-db
    networks:
      - pgadmin-net
      - local-net
    expose:
      - 5432
  redis:
    image: redis:latest
    expose:
      - 6379
    networks:
      - local-net
  minio:
    image: minio/minio:latest
    restart: unless-stopped
    hostname: minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio-data:/data
    networks:
      - minio-net
    ports:
      - "9001:9001"  # expose only console
    command: server /data --console-address ":9001"
  web:
    build: .
    depends_on:
      - db
      - redis
    environment:
      RECIPE_REPO_USER: ${RECIPE_REPO_USER}
      RECIPE_REPO_NAME: ${RECIPE_REPO_NAME}
      RECIPE_PAT: ${RECIPE_PAT}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      PASSWORD: ${PASSWORD}
      ADMIN_USER: ${ADMIN_USER}
      SECRET: ${SECRET}
      INSTAGRAM_USER: ${INSTAGRAM_USER}
      INSTAGRAM_PASS: ${INSTAGRAM_PASS}
      PERSIST_DIR: /cache
      REDIS_URL: redis://redis:6379
      MINIO_URL: minio:9000
      MINIO_PUBLIC_URL: http://localhost:9000
      MINIO_BUCKET: cookbook
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_INSECURE: 1
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      PORT: 5000
      PYTHONUNBUFFERED: 1
    networks:
      - local-net
      - minio-net
    ports:
      - '80:5000'
    working_dir: /app/webapp
    volumes:
      - cache-volume:/cache
      - ./src/webapp:/app/webapp
    entrypoint: ["python", "main.py", "--debug"]
volumes:
  minio-data:
  cache-volume:
  dbdata:
networks:
  minio-net:
    name: minio-net
    driver: bridge
  pgadmin-net:
    external: true
  local-net:
